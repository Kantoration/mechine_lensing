# Gravitational Lens Classification - Environment Configuration
# Copy this file to .env and update with your actual values

# ================================
# PROJECT PATHS
# ================================

# Root directory for data storage
DATA_ROOT=data/processed

# Directory for raw data downloads
RAW_DATA_ROOT=data/raw

# Directory for metadata and logs
METADATA_ROOT=data/metadata

# Model checkpoints directory
CHECKPOINTS_DIR=checkpoints

# Results and outputs directory
RESULTS_DIR=results

# Temporary files directory
TEMP_DIR=/tmp

# ================================
# TRAINING CONFIGURATION
# ================================

# Default model architecture (resnet18, resnet34, vit_b_16)
DEFAULT_ARCH=resnet18

# Default image size for training
DEFAULT_IMG_SIZE=64

# Default batch size
DEFAULT_BATCH_SIZE=32

# Default number of epochs
DEFAULT_EPOCHS=10

# Default learning rate
DEFAULT_LR=1e-4

# Default weight decay
DEFAULT_WEIGHT_DECAY=1e-5

# Number of data loading workers
NUM_WORKERS=2

# ================================
# EXPERIMENT TRACKING
# ================================

# Weights & Biases API key (optional)
WANDB_API_KEY=your_wandb_api_key_here

# Weights & Biases project name
WANDB_PROJECT=gravitational-lens-classification

# Weights & Biases entity (username or team)
WANDB_ENTITY=your_username_here

# TensorBoard log directory
TENSORBOARD_LOG_DIR=runs

# MLflow tracking URI (optional)
MLFLOW_TRACKING_URI=http://localhost:5000

# ================================
# CLOUD CONFIGURATION
# ================================

# AWS Configuration (optional)
AWS_ACCESS_KEY_ID=your_aws_access_key
AWS_SECRET_ACCESS_KEY=your_aws_secret_key
AWS_DEFAULT_REGION=us-east-1
AWS_S3_BUCKET=your-lens-data-bucket

# Google Cloud Configuration (optional)
GOOGLE_APPLICATION_CREDENTIALS=path/to/gcp-credentials.json
GCP_PROJECT_ID=your-gcp-project-id
GCS_BUCKET=your-lens-data-bucket

# Azure Configuration (optional)
AZURE_STORAGE_CONNECTION_STRING=your_azure_connection_string
AZURE_CONTAINER_NAME=lens-data

# ================================
# DATASET GENERATION
# ================================

# Default dataset size for training
DEFAULT_N_TRAIN=1800

# Default dataset size for testing
DEFAULT_N_TEST=200

# Default random seed for reproducibility
DEFAULT_SEED=42

# Default class balance (0.5 = equal classes)
DEFAULT_BALANCE=0.5

# Backend for dataset generation (synthetic, deeplenstronomy, auto)
DEFAULT_BACKEND=synthetic

# ================================
# EVALUATION CONFIGURATION
# ================================

# Metrics to compute during evaluation
EVAL_METRICS=accuracy,precision,recall,f1,roc_auc

# Whether to save detailed predictions
SAVE_PREDICTIONS=true

# Whether to plot confusion matrix
PLOT_CONFUSION_MATRIX=true

# Whether to plot ROC curve
PLOT_ROC_CURVE=true

# ================================
# LOGGING CONFIGURATION
# ================================

# Logging level (DEBUG, INFO, WARNING, ERROR, CRITICAL)
LOG_LEVEL=INFO

# Log file path (optional, logs to console if not set)
LOG_FILE=logs/lens_classification.log

# Whether to use structured logging (JSON format)
STRUCTURED_LOGGING=false

# ================================
# DEVELOPMENT CONFIGURATION
# ================================

# Whether to run in debug mode
DEBUG=false

# Whether to use CUDA if available
USE_CUDA=true

# Whether to use mixed precision training
USE_MIXED_PRECISION=false

# Whether to profile code execution
ENABLE_PROFILING=false

# Code style check level (strict, normal, minimal)
STYLE_CHECK_LEVEL=normal

# ================================
# SECURITY
# ================================

# Secret key for any encryption needs
SECRET_KEY=your-secret-key-here

# API tokens for external services
EXTERNAL_API_TOKEN=your-external-api-token

# ================================
# OPTIONAL INTEGRATIONS
# ================================

# Slack webhook for notifications (optional)
SLACK_WEBHOOK_URL=https://hooks.slack.com/services/YOUR/SLACK/WEBHOOK

# Email configuration for notifications (optional)
SMTP_SERVER=smtp.gmail.com
SMTP_PORT=587
SMTP_USERNAME=your-email@gmail.com
SMTP_PASSWORD=your-app-password

# Discord webhook for notifications (optional)
DISCORD_WEBHOOK_URL=https://discord.com/api/webhooks/YOUR/DISCORD/WEBHOOK

# ================================
# PERFORMANCE TUNING
# ================================

# Maximum memory usage for data loading (in GB)
MAX_MEMORY_GB=8

# Whether to pin memory for faster GPU transfer
PIN_MEMORY=true

# Whether to use persistent workers for data loading
PERSISTENT_WORKERS=true

# Number of prefetch batches
PREFETCH_FACTOR=2

# ================================
# NOTES
# ================================
# 
# 1. Copy this file to .env in your project root
# 2. Update the values with your actual configuration
# 3. Never commit .env files to version control
# 4. Use quotes for values with spaces: VALUE="some value with spaces"
# 5. Boolean values: true/false (lowercase)
# 6. Paths can be absolute or relative to project root
#




